/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package multiprograms;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author efrai
 */
public class temperatura extends javax.swing.JFrame {

    /**
     * Creates new form divisas
     */
//    Funciones funciones = new Funciones();
    
    public temperatura() {
        initComponents();
//        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tituloConTempJLabel = new javax.swing.JLabel();
        iconTempJLabel = new javax.swing.JLabel();
        unidadesTempLeftJLabel = new javax.swing.JLabel();
        numeroTempLeftJTextField = new javax.swing.JTextField();
        medidasTempLeftJComboBox = new javax.swing.JComboBox<>();
        igualTempJLabel = new javax.swing.JLabel();
        unidadesTempRightJLabel = new javax.swing.JLabel();
        numeroTempRightJTextField = new javax.swing.JTextField();
        medidasTempRightJComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(45, 118, 235));

        tituloConTempJLabel.setBackground(new java.awt.Color(255, 255, 255));
        tituloConTempJLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tituloConTempJLabel.setForeground(new java.awt.Color(255, 255, 255));
        tituloConTempJLabel.setText("Conversor de Temperatura");

        iconTempJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/multiprograms/imagenes/icons8-temperatura-64-blanco.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(tituloConTempJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                .addComponent(iconTempJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(tituloConTempJLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(iconTempJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 100));

        unidadesTempLeftJLabel.setBackground(new java.awt.Color(45, 118, 235));
        unidadesTempLeftJLabel.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        unidadesTempLeftJLabel.setForeground(new java.awt.Color(45, 118, 235));
        unidadesTempLeftJLabel.setText("Unidades:");
        jPanel1.add(unidadesTempLeftJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 130, 20));

        numeroTempLeftJTextField.setBackground(new java.awt.Color(255, 255, 255));
        numeroTempLeftJTextField.setFont(new java.awt.Font("DialogInput", 1, 16)); // NOI18N
        numeroTempLeftJTextField.setForeground(new java.awt.Color(45, 118, 235));
        numeroTempLeftJTextField.setText("0.0");
        numeroTempLeftJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroTempLeftJTextFieldActionPerformed(evt);
            }
        });
        numeroTempLeftJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numeroTempLeftJTextFieldKeyReleased(evt);
            }
        });
        jPanel1.add(numeroTempLeftJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 220, 40));

        medidasTempLeftJComboBox.setBackground(new java.awt.Color(45, 118, 235));
        medidasTempLeftJComboBox.setForeground(new java.awt.Color(45, 118, 235));
        medidasTempLeftJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));
        medidasTempLeftJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medidasTempLeftJComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(medidasTempLeftJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 220, 40));

        igualTempJLabel.setBackground(new java.awt.Color(45, 118, 235));
        igualTempJLabel.setFont(new java.awt.Font("DialogInput", 1, 48)); // NOI18N
        igualTempJLabel.setForeground(new java.awt.Color(45, 118, 235));
        igualTempJLabel.setText(" = ");
        jPanel1.add(igualTempJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, -1, 80));

        unidadesTempRightJLabel.setBackground(new java.awt.Color(45, 118, 235));
        unidadesTempRightJLabel.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        unidadesTempRightJLabel.setForeground(new java.awt.Color(45, 118, 235));
        unidadesTempRightJLabel.setText("Unidades:");
        jPanel1.add(unidadesTempRightJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 130, 20));

        numeroTempRightJTextField.setBackground(new java.awt.Color(255, 255, 255));
        numeroTempRightJTextField.setFont(new java.awt.Font("DialogInput", 1, 16)); // NOI18N
        numeroTempRightJTextField.setForeground(new java.awt.Color(45, 118, 235));
        numeroTempRightJTextField.setText("0.0");
        numeroTempRightJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroTempRightJTextFieldActionPerformed(evt);
            }
        });
        numeroTempRightJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numeroTempRightJTextFieldKeyReleased(evt);
            }
        });
        jPanel1.add(numeroTempRightJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 220, 40));

        medidasTempRightJComboBox.setBackground(new java.awt.Color(45, 118, 235));
        medidasTempRightJComboBox.setForeground(new java.awt.Color(45, 118, 235));
        medidasTempRightJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));
        medidasTempRightJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medidasTempRightJComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(medidasTempRightJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 220, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numeroTempLeftJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroTempLeftJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroTempLeftJTextFieldActionPerformed

    private void numeroTempRightJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroTempRightJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroTempRightJTextFieldActionPerformed

    private void medidasTempLeftJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medidasTempLeftJComboBoxActionPerformed
        // TODO add your handling code here:
        
        String text = "";
        text =  numeroTempRightJTextField.getText();
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Izquierdo por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion = medidasTempLeftJComboBox.getSelectedItem().toString();
             String convertir = medidasTempRightJComboBox.getSelectedItem().toString();
             String resultado = "";
             switch(convertir){
            case "Celsius":
                  double celsius = Funciones.convertirCelcius(unidades, eleccion);
                   resultado = String.valueOf(celsius);
                  numeroTempLeftJTextField.setText(resultado);
                break;
               
            case "Fahrenheit":
                System.out.println("antes de lllamar la funcion");
                  double Fahrenheit = Funciones.convertirFahrenheit(unidades, eleccion);
                   resultado = String.valueOf(Fahrenheit);
                   numeroTempLeftJTextField.setText(resultado);
                break;
               
            case "Kelvin":
                   double Kelvin = Funciones.convertirKelvin(unidades, eleccion);
                   resultado = String.valueOf(Kelvin);
                   numeroTempLeftJTextField.setText(resultado);
                 break;
        }
           
            
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros y puntos");
        }

    }//GEN-LAST:event_medidasTempLeftJComboBoxActionPerformed

    private void medidasTempRightJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medidasTempRightJComboBoxActionPerformed
        // TODO add your handling code here:
        
        String text = "";
        
        text =  numeroTempLeftJTextField.getText();
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Derecho por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion =  medidasTempRightJComboBox.getSelectedItem().toString();
             String convertir = medidasTempLeftJComboBox.getSelectedItem().toString();
             String resultado = "";
             switch(convertir){
                 
            case "Celsius":
                  double celsius = Funciones.convertirCelcius(unidades, eleccion);
                  resultado = String.valueOf(celsius);
                  numeroTempRightJTextField.setText(resultado);
                break;
               
            case "Fahrenheit":

                  double Fahrenheit = Funciones.convertirFahrenheit(unidades, eleccion);
                   resultado = String.valueOf(Fahrenheit);
                   numeroTempRightJTextField.setText(resultado);
                break;
               
            case "Kelvin":
                   double Kelvin = Funciones.convertirKelvin(unidades, eleccion);
                   resultado = String.valueOf(Kelvin);
                   numeroTempRightJTextField.setText(resultado);
                 break;
        }
            
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros y puntos");
        }

     
    }//GEN-LAST:event_medidasTempRightJComboBoxActionPerformed

    private void numeroTempLeftJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroTempLeftJTextFieldKeyReleased
        // TODO add your handling code here:
         String text = "";
        text =  numeroTempLeftJTextField.getText();
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Izquierdo por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion = medidasTempLeftJComboBox.getSelectedItem().toString();
             String convertir = medidasTempRightJComboBox.getSelectedItem().toString();
             switch(eleccion){
            case "Celsius":
                  double celsius = Funciones.convertirCelcius(unidades, convertir);
                  String resultado = String.valueOf(celsius);
                  numeroTempRightJTextField.setText(resultado);
                break;
               
            case "Fahrenheit":
                  double Fahrenheit = Funciones.convertirFahrenheit(unidades, convertir);
                   resultado = String.valueOf(Fahrenheit);
                   numeroTempRightJTextField.setText(resultado);
                break;
               
            case "Kelvin":
                   double Kelvin = Funciones.convertirKelvin(unidades, convertir);
                   resultado = String.valueOf(Kelvin);
                   numeroTempRightJTextField.setText(resultado);
                 break;
        }
           
            
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros y puntos");
        }
    }//GEN-LAST:event_numeroTempLeftJTextFieldKeyReleased

    private void numeroTempRightJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroTempRightJTextFieldKeyReleased
        // TODO add your handling code here:
         String text = "";
        
        text =  numeroTempRightJTextField.getText();
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Derecho por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion =  medidasTempRightJComboBox.getSelectedItem().toString();
             String convertir = medidasTempLeftJComboBox.getSelectedItem().toString();
             switch(eleccion){
            case "Celsius":
                  double celsius = Funciones.convertirCelcius(unidades, convertir);
                  String resultado = String.valueOf(celsius);
                  numeroTempLeftJTextField.setText(resultado);
                break;
               
            case "Fahrenheit":
                  double Fahrenheit = Funciones.convertirFahrenheit(unidades, convertir);
                   resultado = String.valueOf(Fahrenheit);
                   numeroTempLeftJTextField.setText(resultado);
                break;
               
            case "Kelvin":
                   double Kelvin = Funciones.convertirKelvin(unidades, convertir);
                   resultado = String.valueOf(Kelvin);
                   numeroTempLeftJTextField.setText(resultado);
                 break;
        }
            
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros y puntos");
        }
    }//GEN-LAST:event_numeroTempRightJTextFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(temperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(temperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(temperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(temperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new temperatura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconTempJLabel;
    private javax.swing.JLabel igualTempJLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> medidasTempLeftJComboBox;
    private javax.swing.JComboBox<String> medidasTempRightJComboBox;
    private javax.swing.JTextField numeroTempLeftJTextField;
    private javax.swing.JTextField numeroTempRightJTextField;
    private javax.swing.JLabel tituloConTempJLabel;
    private javax.swing.JLabel unidadesTempLeftJLabel;
    private javax.swing.JLabel unidadesTempRightJLabel;
    // End of variables declaration//GEN-END:variables
}
