/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package multiprograms;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author efrai
 */
public class longitud extends javax.swing.JFrame {

    /**
     * Creates new form divisas
     */
    public longitud() {
        initComponents();
//        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tituloConLongitudesJLabel = new javax.swing.JLabel();
        iconLongJLabel = new javax.swing.JLabel();
        unidadesLongRightJLabel = new javax.swing.JLabel();
        numeroLongRightJTextField = new javax.swing.JTextField();
        medidasLongRightJComboBox = new javax.swing.JComboBox<>();
        igualLongJLabel = new javax.swing.JLabel();
        numeroLongLeftJTextField = new javax.swing.JTextField();
        medidasLongLeftJComboBox = new javax.swing.JComboBox<>();
        unidadesLongLeftJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(45, 118, 235));

        tituloConLongitudesJLabel.setBackground(new java.awt.Color(255, 255, 255));
        tituloConLongitudesJLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tituloConLongitudesJLabel.setForeground(new java.awt.Color(255, 255, 255));
        tituloConLongitudesJLabel.setText("Conversor de Longitudes");

        iconLongJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/multiprograms/imagenes/icons8-longitud-64-blanco.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(tituloConLongitudesJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 273, Short.MAX_VALUE)
                .addComponent(iconLongJLabel)
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(tituloConLongitudesJLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(iconLongJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 100));

        unidadesLongRightJLabel.setBackground(new java.awt.Color(45, 118, 235));
        unidadesLongRightJLabel.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        unidadesLongRightJLabel.setForeground(new java.awt.Color(45, 118, 235));
        unidadesLongRightJLabel.setText("Unidades:");
        jPanel1.add(unidadesLongRightJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 130, 20));

        numeroLongRightJTextField.setBackground(new java.awt.Color(255, 255, 255));
        numeroLongRightJTextField.setFont(new java.awt.Font("DialogInput", 1, 16)); // NOI18N
        numeroLongRightJTextField.setForeground(new java.awt.Color(45, 118, 235));
        numeroLongRightJTextField.setText("0.0");
        numeroLongRightJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numeroLongRightJTextFieldKeyReleased(evt);
            }
        });
        jPanel1.add(numeroLongRightJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 220, 40));

        medidasLongRightJComboBox.setBackground(new java.awt.Color(45, 118, 235));
        medidasLongRightJComboBox.setForeground(new java.awt.Color(45, 118, 235));
        medidasLongRightJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilometro", "Metro", "Centimetro", "Milimetro" }));
        medidasLongRightJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medidasLongRightJComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(medidasLongRightJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 220, 40));

        igualLongJLabel.setBackground(new java.awt.Color(45, 118, 235));
        igualLongJLabel.setFont(new java.awt.Font("DialogInput", 1, 48)); // NOI18N
        igualLongJLabel.setForeground(new java.awt.Color(45, 118, 235));
        igualLongJLabel.setText(" = ");
        jPanel1.add(igualLongJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, -1, 80));

        numeroLongLeftJTextField.setBackground(new java.awt.Color(255, 255, 255));
        numeroLongLeftJTextField.setFont(new java.awt.Font("DialogInput", 1, 16)); // NOI18N
        numeroLongLeftJTextField.setForeground(new java.awt.Color(45, 118, 235));
        numeroLongLeftJTextField.setText("0.0");
        numeroLongLeftJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numeroLongLeftJTextFieldKeyReleased(evt);
            }
        });
        jPanel1.add(numeroLongLeftJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 220, 40));

        medidasLongLeftJComboBox.setBackground(new java.awt.Color(45, 118, 235));
        medidasLongLeftJComboBox.setForeground(new java.awt.Color(45, 118, 235));
        medidasLongLeftJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilometro", "Metro", "Centimetro", "Milimetro" }));
        medidasLongLeftJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medidasLongLeftJComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(medidasLongLeftJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 220, 40));

        unidadesLongLeftJLabel.setBackground(new java.awt.Color(45, 118, 235));
        unidadesLongLeftJLabel.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        unidadesLongLeftJLabel.setForeground(new java.awt.Color(45, 118, 235));
        unidadesLongLeftJLabel.setText("Unidades:");
        jPanel1.add(unidadesLongLeftJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 130, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void medidasLongLeftJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medidasLongLeftJComboBoxActionPerformed
        // TODO add your handling code here:
         String text = "";
        text =  numeroLongRightJTextField.getText();
       
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Izquierdo por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion = medidasLongLeftJComboBox.getSelectedItem().toString();
             String convertir = medidasLongRightJComboBox.getSelectedItem().toString();
            switch(convertir){
              case "Kilometro":
                   double kilometro = Funciones.convertirKilometros(unidades, eleccion);
                    String resultado = String.valueOf( kilometro);
                    numeroLongLeftJTextField.setText(resultado);
                  break;
              case "Metro":
                     double metro = Funciones.convertirmMetros(unidades, eleccion);
                     resultado = String.valueOf(metro);
                     numeroLongLeftJTextField.setText(resultado);
                  break;
              case "Centimetro":

                   double centimetro = Funciones.convertirCentimetros(unidades, eleccion);
                     resultado = String.valueOf(centimetro);
                     numeroLongLeftJTextField.setText(resultado);
                   break;

              case "Milimetro":
                  double milimetro = Funciones.convertirMilimetros(unidades, eleccion);
                     resultado = String.valueOf(milimetro);
                     numeroLongLeftJTextField.setText(resultado);
                   break;
//              case "Seleccionar":
//                   JOptionPane.showMessageDialog(null, "Debes seleccionar una opcion por favor");
//                   break;
            }
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros, punto y el signo de menos");
        }
    }//GEN-LAST:event_medidasLongLeftJComboBoxActionPerformed

    private void medidasLongRightJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medidasLongRightJComboBoxActionPerformed
        // TODO add your handling code here:
         String text = "";
        text =  numeroLongLeftJTextField.getText();
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Izquierdo por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion = medidasLongRightJComboBox.getSelectedItem().toString();
             String convertir = medidasLongLeftJComboBox.getSelectedItem().toString();
            switch(convertir){
              case "Kilometro":
                   double kilometro = Funciones.convertirKilometros(unidades, eleccion);
                    String resultado = String.valueOf( kilometro);
                    numeroLongRightJTextField.setText(resultado);
                  break;
              case "Metro":
                     double metro = Funciones.convertirmMetros(unidades, eleccion);
                     resultado = String.valueOf(metro);
                     numeroLongRightJTextField.setText(resultado);
                  break;
              case "Centimetro":

                   double centimetro = Funciones.convertirCentimetros(unidades, eleccion);
                     resultado = String.valueOf(centimetro);
                     numeroLongRightJTextField.setText(resultado);
                   break;

              case "Milimetro":
                  double milimetro = Funciones.convertirMilimetros(unidades, eleccion);
                     resultado = String.valueOf(milimetro);
                     numeroLongRightJTextField.setText(resultado);
                   break;
//              case "Seleccionar":
//                   JOptionPane.showMessageDialog(null, "Debes seleccionar una opcion por favor");
//                   break;
                   
            }
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros, punto y el signo de menos");
        }
    }//GEN-LAST:event_medidasLongRightJComboBoxActionPerformed

    private void numeroLongLeftJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroLongLeftJTextFieldKeyReleased
        // TODO add your handling code here:
              String text = "";
        text =  numeroLongLeftJTextField.getText();
       
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Izquierdo por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion = medidasLongLeftJComboBox.getSelectedItem().toString();
             String convertir = medidasLongRightJComboBox.getSelectedItem().toString();
            switch(eleccion){
              case "Kilometro":
                   double kilometro = Funciones.convertirKilometros(unidades, convertir);
                    String resultado = String.valueOf( kilometro);
                    numeroLongRightJTextField.setText(resultado);
                  break;
              case "Metro":
                     double metro = Funciones.convertirmMetros(unidades, convertir);
                     resultado = String.valueOf(metro);
                     numeroLongRightJTextField.setText(resultado);
                  break;
              case "Centimetro":

                   double centimetro = Funciones.convertirCentimetros(unidades, convertir);
                     resultado = String.valueOf(centimetro);
                     numeroLongRightJTextField.setText(resultado);
                   break;

              case "Milimetro":
                  double milimetro = Funciones.convertirMilimetros(unidades, convertir);
                     resultado = String.valueOf(milimetro);
                     numeroLongRightJTextField.setText(resultado);
                   break;
//              case "Seleccionar":
//                   JOptionPane.showMessageDialog(null, "Debes seleccionar una opcion por favor");
//                   break;
            }
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros, punto y el signo de menos");
        }
    }//GEN-LAST:event_numeroLongLeftJTextFieldKeyReleased

    private void numeroLongRightJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroLongRightJTextFieldKeyReleased
        // TODO add your handling code here:
         String text = "";
        text =  numeroLongRightJTextField.getText();
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(null, "Escribe la unidad que desas, en el recuadro Izquierdo por favor");
        }else if(Funciones.validacionNumero(text)){
            double unidades = Double.parseDouble(text);
            String eleccion = medidasLongRightJComboBox.getSelectedItem().toString();
             String convertir = medidasLongLeftJComboBox.getSelectedItem().toString();
            switch(eleccion){
              case "Kilometro":
                   double kilometro = Funciones.convertirKilometros(unidades, convertir);
                    String resultado = String.valueOf( kilometro);
                    numeroLongLeftJTextField.setText(resultado);
                  break;
              case "Metro":
                     double metro = Funciones.convertirmMetros(unidades, convertir);
                     resultado = String.valueOf(metro);
                     numeroLongLeftJTextField.setText(resultado);
                  break;
              case "Centimetro":

                   double centimetro = Funciones.convertirCentimetros(unidades, convertir);
                     resultado = String.valueOf(centimetro);
                     numeroLongLeftJTextField.setText(resultado);
                   break;

              case "Milimetro":
                  double milimetro = Funciones.convertirMilimetros(unidades, convertir);
                     resultado = String.valueOf(milimetro);
                     numeroLongLeftJTextField.setText(resultado);
                   break;
//              case "Seleccionar":
//                   JOptionPane.showMessageDialog(null, "Debes seleccionar una opcion por favor");
//                   break;
                   
            }
        }else{
               JOptionPane.showMessageDialog(null, "Solo se aceptan numeros, punto y el signo de menos");
        }
    }//GEN-LAST:event_numeroLongRightJTextFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(longitud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(longitud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(longitud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(longitud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new longitud().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconLongJLabel;
    private javax.swing.JLabel igualLongJLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> medidasLongLeftJComboBox;
    private javax.swing.JComboBox<String> medidasLongRightJComboBox;
    private javax.swing.JTextField numeroLongLeftJTextField;
    private javax.swing.JTextField numeroLongRightJTextField;
    private javax.swing.JLabel tituloConLongitudesJLabel;
    private javax.swing.JLabel unidadesLongLeftJLabel;
    private javax.swing.JLabel unidadesLongRightJLabel;
    // End of variables declaration//GEN-END:variables
}
